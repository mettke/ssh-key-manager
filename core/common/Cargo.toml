[package]
name = "core_common"
version = "0.1.0"
authors = ["Marc Mettke <marc@itmettke.de>"]
edition = "2018"
description = "Core Library providing common data structures"
license-file = "../../LICENSE"
repository = "https://github.com/mettke/ssh-key-manager"
readme = "README.md"
keywords = ["ssh", "key", "management", "data"]
categories = ["data-structures"]

[dependencies]
async-trait = "0.1"
base64 = "0.12"
bishop = "0.3"
core_macros = { path = "../macros" }
chrono = { version = "0.4", features = ["serde"] }
csrf = { version = "0.3.0", git = "https://github.com/heartsucker/rust-csrf.git", branch = "develop" }
failure = "0.1"
http = "0.2"
http_01 = { version = "0.1", package = "http" }
jsonwebtoken = "7.1"
log = "0.4"
oauth2 = { git = 'https://github.com/ramosbugs/oauth2-rs.git', version = "3.0.0-alpha.11" }
openidconnect = { git = 'https://github.com/ramosbugs/openidconnect-rs.git', version = "1.0.0-alpha.15" }
openssh-keys = "0.4"
reqwest = { version = "0.10", features = ["rustls-tls"], default-features = false }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "0.2", features = ["blocking", "macros", "rt-threaded", "signal", "fs"] }
url = "2.1"
uuid = "0.8"

[package.metadata.patch.oauth2]
version = "3.0.0-alpha.11"
patches = [
    "patches/oauth-rs/default.patch",
    "patches/oauth-rs/unicode.patch",
    "patches/oauth-rs/warn.patch",
]

[package.metadata.patch.openidconnect]
patches = [
    "patches/openidconnect/error.patch",
    "patches/openidconnect/oauth.patch",
    "patches/openidconnect/untrusted.patch",
    "patches/openidconnect/warn.patch",
]

[package.metadata.patch.csrf]
patches = [
    "patches/csrf/log.patch",
    "patches/csrf/rand.patch",
    "patches/csrf/RUSTSEC-2016-0005.patch",
    "patches/csrf/warn.patch",
]
